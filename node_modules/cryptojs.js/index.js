
var AesCtr = require('./lib/AesCtr.js');
var ciphertext = AesCtr.encrypt('plaintext', 'pwd', 128);

// 'module.exports' is a node.JS specific feature, it does not work with regular JavaScript
module.exports = 
{	
	/**
     * Encrypt a text using AES encryption in Counter mode of operation.
     *
     * Unicode multi-byte character safe.
     *
     * @param   {string} plaintext - Source text to be encrypted.
     * @param   {string} password - The password to use to generate a key for encryption.
     * @param   {number} nBits - Number of bits to be used in the key; 128 / 192 / 256.
     * @returns {string} Encrypted text, base-64 encoded.
     *
     * @example
     *   const encr = AesCtr.encrypt('big secret', 'pāşšŵōřđ', 256); // 'lwGl66VVwVObKIr6of8HVqJr'
     */
	encrypt: function (plaintext, password = '', nBits = 0) 
	{
		if (password == '') password='password';
		if (nBits<=0 || nBits>256) nBits=128;

		var ciphertext = AesCtr.encrypt(plaintext, password, nBits);
		return ciphertext;
	},

	/**
     * Decrypt a text encrypted by AES in counter mode of operation.
     *
     * @param   {string} ciphertext - Cipher text to be decrypted.
     * @param   {string} password - Password to use to generate a key for decryption.
     * @param   {number} nBits - Number of bits to be used in the key; 128 / 192 / 256.
     * @returns {string} Decrypted text
     *
     * @example
     *   const decr = AesCtr.decrypt('lwGl66VVwVObKIr6of8HVqJr', 'pāşšŵōřđ', 256); // 'big secret'
     */
	decrypt: function (ciphertext, password = '', nBits = 0) 
	{
		if (password == '') password='password';
		if (nBits<=0 || nBits>256) nBits=128;

		var plaintext = AesCtr.decrypt(ciphertext, password, nBits);
		return plaintext;
	},
};
